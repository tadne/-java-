进程是一个程序的执行实例，它是操作系统分配资源和调度的基本单位。
	一个进程可以包含一个或多个线程，每个线程都有自己的执行流程和上下文。

线程是一个程序的执行单元，它是CPU调度的基本单位。
	一个线程只能属于一个进程，同一个进程中的多个线程可以共享该进程的资源，如内存、文件、网络等。

线程和进程的区别主要有以下几点：

	创建和销毁：	创建和销毁一个进程需要操作系统进行大量的资源分配和回收，因此开销较大。
			创建和销毁一个线程只需要在用户空间进行栈分配和回收，因此开销较小。

	通信和同步：	不同进程之间的通信要用复杂的进程间通信机制，如管道、消息队列、共享内存等。
			同一进程内的不同线程之间的通信可以直接通过共享变量或对象进行，
			但是需要使用同步工具，如锁、信号量、条件变量等，来保证数据的一致性。

	性能和效率：	多进程编程可以充分利用多核CPU的资源，提高程序的并行度和吞吐量，
			但也会增加系统的负担和开销。
			多线程编程可以提高程序的响应速度和交互性，但是也会增加程序的复杂度和风险。