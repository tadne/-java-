进程调度策略

	先来先服务:	非抢占式调度算法,按照请求顺序调度
				适合长作业,不适合短作业.因为短作业要等待长作业的完成,造成短作业等待时间过长			
				对IO密集型进程也不好,因为这种进程每次IO操作都要重新排队


	短作业优先:	非抢占式调度算法,按估计运行时间最短的顺序进行调度。
				长作业可能饿死，处于一直等待短作业执行完毕的状态。
				如果一直有短作业到来，那么长作业永远得不到调度。

	最短剩余时间优先：
				最短作业优先的抢占式版本，按剩余运行时间的顺序进行调度。 
				当一个新的作业到达时，其整个运行时间与当前进程的剩余时间作比较。
				如果新的进程需要的时间更少，则挂起当前进程，运行新的进程。否则新的进程等待。

	时间片轮转：	将就绪进程按 FCFS 的原则排成队列，调度时把 CPU 时间分配给队首进程，该进程执行时间片
				时间片用完时，由计时器发出时钟中断，调度程序停止进程执行，并将它送往就绪队列的末尾，
				同时继续把 CPU 时间分配给队首的进程。

		时间片轮转算法的效率和时间片的大小有很大关系：
				因为进程切换要保存进程的信息并且载入新进程信息
						时间片太小，会导致进程切换得太频繁，在进程切换上就会花过多时间。 
						时间片过长，那么实时性就不能得到保证。

	优先级调度：	为每个进程分配一个优先级，按优先级进行调度。
				为防止低优先级的进程永远等不到调度，可以随着时间的推移增加等待进程的优先级。