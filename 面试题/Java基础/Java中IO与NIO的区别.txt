IO和NIO都是Java中用来处理输入输出操作的技术，它们的区别在于：



IO是基于流的，NIO是基于缓冲区和通道的：
	IO是指传统的输入输出技术，基于字节流或字符流的，每次从流中读取或写入一个或多个字节或字符。
	NIO是指新的输入输出技术，基于缓冲区和通道的，每次从通道中读取或写入一块数据到缓冲区 。


IO是阻塞的，NIO是非阻塞的：
	IO是指阻塞式的输入输出技术，进行读写操作时，会让当前线程等待，直到数据准备好或者写入完成。
	NIO是指非阻塞式的输入输出技术，进行读写操作时，不会让当前线程等待，而是立即返回，
			如果数据没有准备好或者写入未完成，就返回0或null 。

IO是单向的，NIO是双向的：
	IO是指单向的输入输出技术，需要分别创建输入流和输出流来进行读写操作。
	NIO是指双向的输入输出技术，需要创建一个通道就可以进行读写操作 。

IO支持多路复用，NIO支持多路复用和异步：
	多路复用:	使用一个线程来处理多个输入输出事件，从而提高效率。
		
	IO支持多路复用的方式是用Selector类和select方法来轮询注册在Selector上的所有通道，			如果有通道准备好输入输出事件，就交给相应的处理器处理。
	
	NIO也支持多路复用的方式，
	但它还支持异步的方式，
		即用Future类或CompletionHandler接口来处理输入输出事件的结果 。