泛型是JDK5之后的特性，
	可以让代码被不同类型的对象所重用。
	本质是参数化类型，也就是操作的数据类型被指定为一个参数。

泛型的常用特点有以下几点：

	类型安全：
		泛型可以约束变量的类型，保证了类型的安全性。
		编译器可以在编译时检测到非法的类型，避免了运行时的ClassCastException。

	消除强制类型转换：
		泛型可以使编译器知道一个对象的限定类型，省去了不必要的类型转换操作。
	
	代码复用：
		泛型可以让我们定义一个通用的类或方法，而不必为每种可能的类型都创建一个单独的版本。
	
	灵活性：	泛型可以使用通配符和边界来表示不确定或有限制的类型，增加了代码的灵活性和通用性。