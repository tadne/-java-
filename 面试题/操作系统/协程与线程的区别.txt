协程与线程的区别

	协程:	一种轻量级的并发编程技术，允许程序在执行过程中暂停和恢复。
	线程:	cpu资源调度的基本单位


	区别:	线程和进程都是同步机制,而协程是异步机制

			线程时抢占式的,而协程式非抢占式的.
					协程需要用户释放所有权才能切换到其他协程,
					因此同一时间其实只有一个协程拥有运行权,相当于单线程的能力

			一个线程可以有多个协程,一个进程也可以有多个协程

			协程不被操作系统内核管理,而是完全由程序控制.
			线程是被分割的CPU资源,协程是组织好的代码流程,线程是协程的资源
					协程可以在单个线程中实现多个任务的并发执行，可以更加高效地利用计算机资源
					但协程不会直接使用线程，协程直接利用的是执行器关联任意线程或线程池。
					协程和线程是两个不同概念
					
			协程能保留上一次调用时的状态




为什么说协程是异步机制?

		协程本身并不是异步机制，但它可以与异步机制结合使用，实现异步编程.
		 由于协程可以在执行过程中暂停和恢复，因此可以在等待I/O操作完成时挂起当前协程任务，
		手动异步执行另一个协程，主动让出“使用权”


怎么理解协程可以保留上一次调用时的状态
		协程能保留上次调用时的所有局部状态的特定组合, 每次过程重入时，相当于进入上一次调用的状态
						
			也就是说协程可以调用上一次调用时的变量,栈,寄存器等信息
			
			过程重入:		协程执行过程中,遇到某些需要停止执行的情况,协程会暂停执行,并保存当前状态
						协程再次调度执行时,会从上一次暂停位置继续执行
			
		
			