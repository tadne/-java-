Mybatis提供了以下几种常见的方法可以实现批量插入：


foreach标签:	
		在XML配置文件中使用foreach标签来遍历集合或数组，并拼接SQL语句的方式，
		可以让做到批量插入多条数据，而不需要多次执行SQL语句。
		使用这种方法，要在XML配置文件中用<insert>标签定义插入语句，并在用<foreach>标签
		来遍历集合或数组，并用#或$来传入参数值。

如：
   	 <!-- 定义一个批量插入用户的语句，使用foreach标签来遍历集合，并拼接SQL语句 -->
   	 <insert id="batchInsertUser">
        	insert into user (id, name, age, email) values
        	<!-- 使用collection属性指定要遍历的集合名，使用item属性指定每个元素的别名 -->
       	 	<foreach collection="users" item="user" separator=",">
            		<!-- 使用#或$来传入参数值 -->
            	(#{user.id}, #{user.name}, #{user.age}, #{user.email})
        	</foreach>
    	</insert>



ExecutorType.BATCH：
	在Java代码中使用ExecutorType.BATCH枚举类型来指定执行器类型的方式，
	可以将多条SQL语句缓存在内存中，一次性提交到数据库中执行，实现批量插入。
	使用这种方法，要在Java代码中创建一个SqlSession对象，并将ExecutorType.BATCH作为参数
	传入SqlSessionFactory的openSession()方法中，并调用SqlSession的commit()方法来提交事务。

如：
	// 调用UserMapper接口的方法
	// 创建一个SqlSession对象，并指定执行器类型为ExecutorType.BATCH
	SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.BATCH);
	// 获取UserMapper接口的代理对象
	UserMapper userMapper = sqlSession.getMapper(UserMapper.class);
	// 遍历集合，调用UserMapper接口的方法，将SQL语句缓存在内存中
	for (User user : users) {
	    userMapper.insertUser(user);
	}
	// 提交事务，将缓存中的SQL语句一次性提交到数据库中执行
	sqlSession.commit();


分页插件：
	利用Mybatis提供的插件机制来实现自动分页和批量插入的方式，
	不需要修改SQL语句和Java代码，通过配置文件或注解指定分页参数，
		由插件拦截SQL语句并添加相应的分页逻辑和批量插入逻辑。
	
	适用于任何数据库，是真正的物理分页和批量插入，即只查询当前页需要显示的数据，提高性能和效率
	
	使用这种方法，需要引入相应的分页插件，并在配置文件或注解中配置相关的属性。

如：

	<!-- 引入PageHelper依赖 -->
	<dependency>
    		<groupId>com.github.pagehelper</groupId>
    		<artifactId>pagehelper-spring-boot-starter</artifactId>
    		<version>1.3.1</version>
	</dependency>

	<!-- 在application.properties配置文件配置分页插件属性 -->
	# 指定数据库的方言
		pagehelper.helperDialect=mysql
	# 指定是否支持RowBounds分页
		pagehelper.rowBoundsWithCount=true
	# 指定是否合理化分页参数，即当页码超出范围时，是否自动调整为第一页或最后一页
		pagehelper.reasonable=true
	# 指定是否支持批量插入
		pagehelper.supportMethodsArguments=true

<!-- 定义一个UserMapper.xml配置文件 -->
<mapper namespace="cn.tewuyiang.mapper.UserMapper">
    <!-- 定义一个批量插入用户的语句，由分页插件来拦截SQL语句并添加批量插入逻辑 -->
    <insert id="batchInsertUser">
        insert into user (id, name, age, email) values ...
    </insert>
</mapper>