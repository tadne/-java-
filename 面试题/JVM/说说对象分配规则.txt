对象优先在 Eden 区分配：
	针对新生代的对象分配规则，认为大多数对象都是朝生夕灭的，优先在 Eden 区域分配内存，
	如果Eden区域没有足够的空间，会触发一次 Minor GC，把存活的对象转移到 Survivor 区域或老年代。

大对象直接进入老年代：
	针对大对象的对象分配规则，认为大对象占用内存空间较多，如果在新生代分配，
	会加大垃圾回收的负担和内存碎片的产生，所以直接在老年代分配内存。

	大对象的判断标准由 -XX:PretenureSizeThreshold 参数指定，
	如果一个对象超过了这个参数的值（默认为 0），就会直接在老年代分配。


长期存活的对象进入老年代：
	针对长寿对象的对象分配规则，认为经过多次 Minor GC 仍然存活的对象，
	有可能长期存活，应该进入老年代。
	
	每个对象都有一个年龄计数器（Age），经过一次 Minor GC，年龄就加一，
	当年龄达到 -XX:MaxTenuringThreshold 参数指定的值（默认为 15）时，就会进入老年代。

动态对象年龄判定：
	针对相同年龄段的对象的对象分配规则，认为如果Survivor区中相同年龄的所有对象大小总和超过
	Survivor 区域的一半，对象可以直接进入老年代，无需等到-XX:MaxTenuringThreshold参数指定的值。

空间分配担保：
	Minor GC 后的对象分配规则，认为在发生Minor GC前，jvm会检查老年代最大可用连续空间
	是否大于新生代所有对象总空间，如果大于，则Minor GC是安全的；
	如果不大于，则jvm会检查 -XX:HandlePromotionFailure 参数是否允许担保失败（默认true），
	
	如果允许，则只有老年代最大可用的连续空间大于历次晋升到老年代对象的平均大小时，进行 Minor GC；	否则就会进行 Full GC。