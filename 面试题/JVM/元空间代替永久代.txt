元空间是 Java 8 及之后版本中的一种特殊的内存空间，
	用于存储类的元数据、常量池、静态变量等数据。
	元空间用本地内存来分配空间，不受 JVM 堆内存的限制，只受本地内存的限制。	
	元空间的大小可通过-XX:MetaspaceSize和-XX:MaxMetaspaceSize参数来设置，影响程序的性能和效率。

永久代是 Java 7 及之前版本中的一种特殊的堆内存区域，
	用于存储类的元数据、常量池、静态变量等数据。
	永久代的空间大小是有限的，如果不进行垃圾回收，就会出现永久代溢出的错误。
	永久代的大小可以通过 -XX:PermSize 和 -XX:MaxPermSize 参数来设置，影响程序的性能和效率。


元空间代替了永久代的原因主要有以下几个：

	永久代的空间大小固定，不容易调整，容易出现溢出错误；
	而元空间使用本地内存，可以动态扩展，更灵活。

	永久代中存储了大量的字符串常量，容易出现内存泄漏和性能下降；
	而元空间中不再存储字符串常量，而是移动到了 Java 堆中。

	永久代中存储了大量的类信息，需要进行复杂的垃圾回收算法；
	而元空间中可以使用本地内存管理机制，简化了垃圾回收的过程。

	永久代是为了兼容 HotSpot 虚拟机而设计的，不符合 Java 虚拟机规范；
	而元空间是为了适应不同平台和环境而设计的，更符合 Java 虚拟机规范。