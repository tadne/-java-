Mybatis的缓存机制:
	Mybatis会将常查询的数据或结果集缓存在内存中，减少对数据库的访问次数，提高查询效率和性能。

Mybatis提供了以下两种类型的缓存：

一级缓存：	本地缓存，也称为SqlSession级别的缓存，在每个SqlSession对象中创建的，
		只对当前SqlSession对象可见，不能跨SqlSession对象共享。

	作用域:	一个SqlSession对象的生命周期，当SqlSession对象关闭或清空时，一级缓存也会失效。
		一级缓存默认开启，可以通过设置localCacheScope属性控制一级缓存的作用范围，
		有两个可选值：SESSION和STATEMENT
			SESSION:表示在同一个SqlSession对象中，相同的SQL语句和参数会命中一级缓存；			STATEMENT:表示在同一个SqlSession对象中，每次执行完SQL后，会清空一级缓存。

二级缓存：
	全局缓存，也称为Mapper级别的缓存，在每个Mapper对象中创建，可以跨SqlSession对象共享。

	作用域:	一个Mapper对象的生命周期，当Mapper对象被销毁时，二级缓存也会失效。
		二级缓存默认是关闭的，要在XML配置文件或注解中开启二级缓存，并指定要使用的缓存实现类。
	
	Mybatis提供了内置缓存实现类，如PerpetualCache、FifoCache、LruCache等，或自定义缓存实现类。

Mybatis实现缓存机制的原理:
	基于哈希表和装饰器模式的机制，即：

	哈希表：	Mybatis使用哈希表存储和查找缓存数据，
		哈希表的键由SQL语句、参数、分页信息等组成的一个唯一标识符，
		哈希表的值是由查询结果或结果集组成的一个对象。

	装饰器模式：Mybatis用装饰器模式来扩展和增强缓存功能，如添加日志、同步、过期、淘汰等功能。
		装饰器模式:	一种结构型设计模式，可以在不改变原有对象的基础上，
				动态地给一个对象添加一些额外的职责。


其实现在都不用这种东西,都是redis实现缓存