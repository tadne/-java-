两种常见feed模式

	Timeline:		不做内容筛选,按照时间排序,用于好友或关注.
				优点:	信息全面	,实现简单
				缺点:	信息噪音多,用户不一定喜欢,内容获取效率低

	智能排序:		用智能算法屏蔽违规,用户不喜欢的内容,推送用户感兴趣信息吸引用户
				优点;	投喂用户感兴趣信息,用户粘度高,容易沉迷
				缺点:	算法不精准可能会起反作用
	
Timeline的三种实现方案:

	1:	拉模式,也叫读扩散
			
			只有在读消息的时候才会去拉取信息
		
			优点:	信息只保存一次,节约内存
			缺点:	延时高,每次读都是重新拉取
			

	2:	推模式,也叫写扩散
			
			发消息的时候就直接写入对方收件箱中

			优点:	延时低
			缺点:	信息保存多份,浪费内存


	3:	推拉结合,也叫读写混合
		
			对于普通人采用拉模式,因为收件少,节约内存
			对于活跃用户采用推模式,因为好友多或者关注多,避免延时过高


					拉模式				推模式					推拉结合
			
	写比例			低					高						中

	读比例			高					低						中

	用户读取延迟		高					低						低

	实现难度			复杂					简单						很复杂

	使用场景			很少使用				用户量少,没有大V			过千万的用户量,有大V



	feed流不能采用传统分页模式,因为数据在不断更新

	可以采用滚动分页来实现,每次都获取上次最后一次分页最后id...
	

		滚动分页:		用redis中的SortedSet结构实现
					四个参数:		最大值,最小值,偏移量,一页的数量
					max:		上一次查询的最小时间戳
					min:			0
					offset:		在上一次结果中与最小值相同的元素个数
					count:		固定值	
	
		

