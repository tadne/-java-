Object类是Java中的一个特殊的类，它是所有类的父类，也就是说所有的类都直接或间接地继承自Object类




toString()方法：
	这个方法返回对象的字符串表示，通常包括对象的类名和哈希码。
	这个方法可以被子类重写，以提供更有意义的信息

equals()方法：
	这个方法用来比较两个对象是否相等，它默认是比较对象的引用是否相同。
	这个方法可以被子类重写，以实现自定义的相等判断逻辑

hashCode()方法：
	这个方法返回对象的哈希码值，它是一个整数，通常根据对象的内部状态计算得到。
	
	hashCode方法和equals方法有一个重要的约定：
		如果两个对象相等（即equals方法返回true），它们的哈希码值也必须相等；
		反之，如果两个对象不相等（即equals方法返回false），它们的哈希码值不一定不相等。
		这是为保证在使用哈希表（如HashMap, HashSet等）时，能够正确地存储和查找对象 。


getClass()方法：
	这个方法返回 对象的运行时类型 ，它是一个final的native方法，由非Java语言实现的。

	这个方法返回的是一个Class对象，
	包含了对象所属类的所有信息，如类名、构造函数、方法、属性、父类、接口等。
	可以通过这个方法来获取对象的元数据，或者进行反射操作

finalize()方法：
	这个方法是在对象被垃圾回收器回收之前调用的，是一个protected的方法
	也就是只能被子类或同一包中的类访问。
	可以被子类重写，以实现一些资源释放或清理的操作 

notify()和wait()方法：
	这两个方法是用来实现线程间的通信和同步，它们都是final的native方法，由非Java语言实现的。
	这两个方法必须在同步代码块或同步方法中调用，且必须使用相同的锁对象来调用。
	notify()方法可以唤醒一个在该锁对象上等待的线程；
	wait()方法可以让当前线程释放该锁对象，并进入等待状态，直到被其他线程唤醒或者被中断 。











