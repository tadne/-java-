IOC是一种编程思想
	可以将对象的创建、初始化、销毁等工作交给Spring容器管理
	不由自己控制，实现对象与对象之间的解耦。IOC可以提高代码的模块化和可维护性。

要使用Spring的IOC，您需要了解以下几个要点：

IOC容器：	IOC容器是Spring框架的核心组件，负责创建和管理所有的Java对象（称为Spring Bean）。

Spring提供了两种类型的IOC容器：BeanFactory和ApplicationContext。
	BeanFactory是基础类型的IOC容器，提供了完整的IOC服务支持，但默认采用延迟初始化策略，
	只有当客户端对象需要访问容器中的某个受管对象时，才对该受管对象进行初始化和依赖注入操作。

ApplicationContext:	BeanFactory的子类，提供了更多的高级特性，
		如事件发布、国际化支持、注解支持等，并且默认采用预初始化策略，
		即在容器启动时就创建和注入所有的受管对象。

Bean：		是描述一个受管对象的属性和行为的元数据，
		包括了Bean的类名、作用域、构造参数、属性值、依赖关系等信息。
		可以通过XML配置文件、注解或Java代码来定义Bean。

Bean实例化：	指根据Bean定义创建一个Java对象的过程。
		Spring提供了三种常用的Bean实例化方式：默认构造方法、静态工厂方法或实例工厂方法。

依赖注入：	依赖注入是指在系统运行时，动态地将所需的其他对象注入到目标对象中，实现对象间的协作。
		Spring支持两种常用的依赖注入方式：构造方法注入和setter方法注入。