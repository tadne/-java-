指针碰撞（Pointer Bumping）
	一种用于在堆内存中为对象分配空间的方法，适用于内存空间连续且规整的情况，
	如新生代的 Eden 区域
		
	指针碰撞原理:	
		Eden区域分为两部分，一部分用于存放已经分配的对象，另一部分用于存放未分配的空闲空间。
		两部分之间有一个指针作为分界点，初始时指向 Eden 区域的起始地址，
		当有新对象需要分配时，
			就把指针向空闲空间移动一段与对象大小相等的距离，
			把原来的指针位置作为对象的内存地址。
		
		这样，就可以快速地为对象分配空间，而不需要进行复杂的内存管理算法。

	优点:	效率高，不需要维护空闲列表；
	缺点:	需要保证内存空间的连续性和规整性，否则会出现内存碎片和浪费。
		指针碰撞通常与垃圾回收算法结合使用，
	
	如:	复制算法（Copying）或标记-整理算法（Mark-Compact），保证内存空间的连续性和规整性。