jdk8之前，	栈，堆，方法区(永久代(堆))，本地方法栈，寄存器

jdk8之后，	栈，堆，元空间，寄存器，本地方法区(元空间)

栈：			方法运行时使用的内存，如main方法运行，进入方法栈执行
堆：			储存对象或者数组，new来创建，都储存在堆内存
方法区：		储存可以运行的class文件
本地方法栈：	jvm在使用操作系统功能的时候使用，与开发无关
寄存器：		给cpu使用，和开发无关


栈：	程序的主入口，开始执行时进栈，执行完毕就出栈
堆：	new创建的都储存在堆中

基本数据类型，都可以在栈中直接创建。不用new

方法中定义一个数组int[] arr=new int[length]
	就是在堆中创建一个数组空间int[]，分为length块，每一块中有对应数据，
	其实这个块名也就是索引0、1、2...，在栈中创建arr变量对应地址值，
	使用其中元素的时候就通过地址值在堆中查找对应数据
======================================================================
 
关键：	只要时new出来的一定时在堆里面开辟了一个小空间
	如果new了多次，那么堆里创建多个小空间，每一个小空间中都有各自的数据

======================================================================

	int[] arr1={1,2};
	int[] arr2=arr1;
	这种情况下，arr2就不是new出来的，就没有创建新空间。它其实是将arr1的地址赋值给了arr2
	所以如果现在通过arr2修改数组中的属性，那么arr1中的属性也被修改了
	其实就是arr2和arr1其实是代表着同一个东西


=============================================
	两个数组指向同一个小空间时，一个改变，另一个也会改变
==============================================