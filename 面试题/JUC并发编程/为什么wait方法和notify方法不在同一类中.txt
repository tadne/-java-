wait方法和notify方法都是Object类中的方法，可以用来实现线程间的通信和协作。

作用：
	wait方法
		用来让当前线程进入等待状态，释放对象锁，并将该线程放入对象的等待队列中。
		直到其他线程调用了该对象的notify或notifyAll方法，或者等待超时后，
		线程才会被唤醒，并重新竞争对象锁。

	notify方法是用来唤醒在该对象上等待的一个线程，让它重新竞争对象锁。

	具体是哪个线程由JVM决定，而其他仍然在等待的线程必须等待下一次被唤醒。


wait方法和notify方法是在同一个类中，就是Object类。

因为：

	对象锁的原因：
		wait方法和notify方法都需要获取对象的锁，才能进行操作。
		如果它们不在Object类中，而是在Thread类中，会导致每个线程都要持有自己的锁，
		而不是共享同一个对象的锁。这样会破坏同步机制，导致数据不一致或者死锁。

	通用性的原因：
		wait方法和notify方法都可以用于任何对象，而不仅仅是线程对象。
		如果它们不在Object类中，而是在Thread类中，会导致只有线程对象才能使用这些方法，
		而其他类型的对象就无法使用。就会降低通用性和灵活性。

因此，为了保证对象锁的正确性和通用性，wait方法和notify方法都放在了Object类中，而不是Thread类中。