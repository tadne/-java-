CyclicBarrier和CountDownLatch是Java并发编程中的同步辅助类，可以用来控制多个线程之间的协作


主要的区别 ：

	功能：	CyclicBarrier是一个循环屏障，可以让一组线程在达到一个屏障点时互相等待，
		直到所有线程都到达屏障点，然后再一起继续执行后续的任务；

		CountDownLatch是一个倒计时门闩，可以让一个或多个线程在一个门闩上等待，
		直到其他线程完成一组操作后打开门闩，然后等待的线程才能继续执行。

可重用性：
	CyclicBarrier是可重用的，当一组线程通过了屏障点后，屏障点会自动重置，可以用于下一组线程；	CountDownLatch是不可重用的，当门闩被打开后，不能再关闭，
			如果需要重新计数，必须创建一个新的CountDownLatch对象。

附加操作：
	CyclicBarrier可以在所有线程到达屏障点后执行可选的附加操作，由最后一个到达屏障点的线程执行；	CountDownLatch没有这样的功能，它只是一个简单的计数器。

使用场景：
	CyclicBarrier适合用于多个线程之间需要相互等待的场景，
		如多人游戏、并行计算等；

	CountDownLatch适合用于一个或多个线程需要等待其他线程完成某些操作的场景，
		如启动检查、测试驱动等。