static是Java中的一个保留关键字，用来修饰类、方法、变量（包括成员变量和局部变量）。


static的用法有以下几种：

	修饰类：
		用static修饰的类叫做静态内部类，表示这个类只能在其外部类中使用，不能被其他类访问。
		静态内部类不需要依赖外部类的实例，可以直接创建对象。
		静态内部类可以访问外部类的静态成员，但不能访问非静态成员。

	修饰方法：
		用static修饰的方法叫做静态方法，表示这个方法属于类，而不属于对象。
		静态方法可以直接通过类名调用，不需要创建对象。
		静态方法只能访问静态成员，不能访问非静态成员，也不能使用this和super关键字。

	修饰变量：
		用static修饰的变量叫做静态变量，它表示这个变量属于类，而不属于对象。
		静态变量可以直接通过类名访问，不需要创建对象。
		静态变量在内存中只有一份，被该类的所有对象共享。
		静态变量在类加载时就初始化，而且只初始化一次。

	修饰代码块：
		用static修饰的代码块叫做静态代码块，表示这段代码在类加载时就执行，且只执行一次。
		静态代码块通常用来对静态成员进行初始化。



为什么静态方法中没有this和super?

	静态方法表示这个方法属于类，而不属于对象。静态方法可以直接通过类名调用，不需要创建对象 。

	this和super是两个特殊的关键字，它们表示当前对象和当前对象的父类对象 。

	在静态方法中，没有this和super的原因有：

		静态方法不依赖于对象：
			静态方法是属于类的，不需要创建对象就可以调用。
			而this和super是属于对象的，只有在创建对象后才有意义。
			如果在静态方法中使用this和super，那么就会出现不一致的情况 。

		静态方法不能访问非静态成员：
			静态方法只能访问静态成员，不能访问非静态成员。
			而this和super是非静态成员，可以访问非静态成员。
			如果在静态方法中使用this和super，那么就会出现访问权限的问题 。
	
		静态方法不能被重写：
			静态方法是属于类的，不受多态性的影响。
			而this和super是属于对象的，可以实现多态性。
			如果在静态方法中使用this和super，那么就会出现多态性的问题 。











