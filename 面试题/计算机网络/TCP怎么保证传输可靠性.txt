什么是TCP:	传输控制协议（TCP，Transmission Control Protocol）
				一种面向连接的、可靠的、基于字节流的传输层通信协议



TCP怎么保证传输可靠性?

	校验和:		发送方:	发送数据前计算校验和 ,并填充到tcp报文首部
				接受方:	收到数据后计算校验和,与发送方校验和比较是否一致
						如果不一致就说明传输有误
						如果校验出包出错,则丢弃报文端且不给出响应,这时TCP发送数据端超时重发

	序列号:		根据序列号对失序数据包重排序
				丢弃重复数据:	去掉重复序列号的数据

	应答机制:		TCP传输过程中,每次接受方收到数据后,都会对传输方确认,也就是发送ack报文
				这个确认不是立即发送,有一定延迟

	超时重传:		当tcp发送一个段后,启动一个定时器,等待目的端确认收到这个报文段
				如果不能及时ack,就重发报文段

		超时重传机制解决的问题:
			接受方没有收到数据
			接受方成功收到数据,但是ack报文丢失
	
		超时重传机制:		就是发送数据后等一会,到时间没有收到ack,就重发
					如果是接受方没有收到数据, 那么接收方收到二次传输的数据,并ack
					如果是收到数据但ack丢失,(接受方根据序列号判断),那就直接丢弃,并ack

	连接管理:		三次握手和四次挥手过程

	流量控制:		滑动窗口
			TCP连接的每一方都有固定大小的缓冲空间。
				TCP接收端只允许另一端发送接收端缓冲区能接纳的数据，防止快主机使慢主机缓冲区溢出，				这就是流量控制。
		
			TCP使用的流量控制协议是可变大小的滑动窗口协议。
				TCP报文首部有一个窗口，就是接收端接收数据缓冲区的大小。
				数字越大，证明接收端接收缓冲区的剩余空间越大；
				接收方收到数据发送ACK时，将窗口大小一并发送，发送方根据窗口大小改变发送数据的速度
				如果窗口大小为0，那就停止发送数据。
				并定期向接收端发送窗口探测数据段，让接收端把窗口大小告诉发送端。



	慢启动
			发送数据时，先发少量数据探路，观察网络状态，在决定以多大的速度进行传输。
			这时引入拥塞窗口概念，窗口初始值为1，每接收到一个ACK，拥塞窗口就翻倍，呈现指数级增长。
			
			慢启动机制在开始的时候发送少量数据，但是增长速度快，为控制拥塞窗口的增长，
			不使拥塞窗口单纯的翻倍，要设置一个拥塞窗口的阈值，将慢启动阈值设置为窗口的最大值。


	拥塞避免
			当拥塞窗口等于慢启动阈值时，会启用拥塞避免算法。
			乘法减小：出现拥塞时，将慢启动阈值设置为原来的一半，拥塞窗口初始化为1，执行慢启动算法。
			加法增大：每经过一个往返时间RTT，拥塞窗口+1，让拥塞窗口缓慢增大，按照线性规律增长。


	快重传【对超时重传的改进】
			快重传算法要求接收方先收到失序的报文段后就立刻发出重复确认，不要等发数据时才捎带确认。

			接收方成功的接受了发送方发送来的M1、M2并且分别给发送了ACK，现在接收方没有收到M3，
			而接收到了M4，显然接收方不能确认M4，因为M4是失序的报文段。

			如果根据可靠性传输原理接收方什么都不做，但是按照快速重传算法，
			收到M4、M5等报文段时，不断重复的向发送方发送M2的ACK,
			如果接收方一连收到三个重复的ACK,那么发送方不必等待重传计时器到期，
			由于发送方尽早重传未被确认的报文段。

	快恢复
		当发送方连续接收到三个确认时，执行乘法减小算法，慢启动开始阈值减半，但不执行慢启动算法。

		此时把窗口大小设置为ssthresh的一半， 执行拥塞避免算法，使拥塞窗口缓慢增大。



















