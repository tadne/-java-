面向对象的设计原则:
		指在进行面向对象的软件开发时，应该遵循一些基本的原则，以提高软件的质量和可维护性。

根据不同的来源和角度，有不同的划分方式，但一般认为有以下七个原则：

	单一职责原则：	
				一个类或者一个方法应该只有一个职责，避免过于复杂和臃肿。

	开闭原则：	
				一个实体（类，模块，方法等）应该对扩展开放，对修改关闭，	
				即在不修改原有代码的基础上能够增加新的功能。

	里氏替换原则：
				一个子类或子类型应该能替换它们的父类或父类型，且不影响原有程序的正确性和功能。

	依赖倒置原则：	
				高层模块不应该依赖于低层模块，而是都应该依赖于抽象；
				抽象不应该依赖于细节，细节应该依赖于抽象。

	接口隔离原则：
				客户端不应该被强迫依赖于它们不使用的接口，接口应该尽可能小，而且高内聚。

	组合/聚合复用原则：
				尽量使用组合或者聚合的方式来复用已有的对象，而不是通过继承来复用。

	迪米特法则：
				一个对象应对其他对象尽可能少的了解，只与直接相关的对象交互，降低类之间的耦合