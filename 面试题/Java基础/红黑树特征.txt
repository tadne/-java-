红黑树	:	一种自平衡的二叉查找树

	在 O(logN) 时间内完成查找、插入和删除等操作，其中 N 是树中元素的数目。
	红黑树的每个节点都有一个颜色属性，要么是红色，要么是黑色。


红黑树必须满足以下五个性质：

		节点是红色或黑色。
		根节点是黑色。
		所有叶子节点是黑色。
		从每个叶子到根的所有路径上不能有两个连续的红色节点
		从任一节点到其每个叶子的所有简单路径都包含相同数目的黑色节点（简称黑高）。
	
	这些性质保证了红黑树的关键特性：从根到叶子的最长的可能路径不多于最短的可能路径的两倍长。
	这使得红黑树在最坏情况下仍然是高效的，而不像普通的二叉查找树那样可能退化成链表。



	红黑树能够保证从根到叶子的最长的可能路径不多于最短的可能路径的两倍长，使得红黑树在最坏情况下仍		然是高效的，而不像普通的二叉查找树那样可能退化成链表。

	红黑树通过定义一些性质，将任意节点的左右子树高度差控制在规定范围内，以达到平衡状态。
		这些性质包括节点的颜色、根节点和叶子节点的颜色、红色节点的子节点的颜色、
			从任一节点到其每个叶子节点的黑色节点数目等。

	红黑树在插入和删除操作后，通过变色和旋转进行调整，以恢复红黑树的性质。
		这些调整操作都是局部的，不会影响整棵树的结构。而且任何不平衡都会在3次旋转之内解决。
