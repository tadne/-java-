进程间的同步方式

	临界区:		通过对多线程的串行化访问公共资源或一段代码,速度快,适合控制数据访问

			优点:	保证在某一时刻只有一个线程能访问数据的简便方法
			缺点:	虽然同步速度快,但是只能用来同步本进程内的线程

	互斥量:		为协调共同对一个共享资源的单独访问设计的.
				互斥量和临界区相似,但比临界区复杂,互斥对象只有一个,拥有互斥对象的线程才能访问资源

			优点:	使用互斥能在不同应用程序不同线程中实现资源安全共享

			缺点:	1:	互斥量可以命名,也就是可以跨进程使用,所以创建需要的资源较多
						如果只为了在进程内部使用,临界区速度更快,资源占用少
					2:	通过互斥量可以指定资源被独占的方式使用
						例:	如果一个用户购买了访问许可数量决定有多少线程/进程能同时进行数据库操作
							这个时候,互斥量就不能满足要求.信号量是个很好的解决办法
	
	信号量:		为控制一个有优先数量用户资源设计
				允许多个线程同一时刻访问同一资源,但要限制在同一时刻访问资源的最大数目
			
				互斥量是信号量的一种特殊情况,即信号量的最大资源数为1的情况

			优点:	适用于对Socket程序中线程的同步
			缺点:	信号量机制必须有公共内存,不能用于分布式操作系统(最大弱点)
					功能强大,但是对信号量的操作分散,难以控制,读写和维护困难
					核心操作P-V分散在各用户程序代码中,不易控制和管理,出错后果严重,不易发现和纠正

	事件:		用来通知线程有一些事件已经发生,从而启动后继任务的开始

			优点:	事件对象通过通知操作的方式保存线程的同步,并且可以实现不同进程中的线程同步操作