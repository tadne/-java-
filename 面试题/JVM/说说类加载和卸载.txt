类加载和卸载是 Java 虚拟机的重要功能之一，负责将类的二进制数据从不同的数据源加载到虚拟机内存中，并在不再使用时将它们从内存中清除。


类加载和卸载的过程可以分为以下几个阶段：
	
	加载：	类加载的第一个阶段，指通过一个类的全限定名来获取该类的二进制字节流，并放到方法区中。
		方法区是一块用于存储已被虚拟机加载的类信息、常量、静态变量、编译后的代码等的内存区域。		
		加载阶段可由虚拟机自带的类加载器或者用户自定义的类加载器来完成 。
	
	
	链接：	类加载的第二个阶段，指将已经加载的类的二进制数据合并到虚拟机的运行时状态中。
		
		链接阶段包括三个步骤：验证、准备和解析。
	
		验证:	确保类符合 Java 语言规范和虚拟机规范，不会危害虚拟机安全；
	
		准备:	为类中的静态变量分配内存并设置初始值；
	
		解析:	将类中的符号引用（如类名、字段名、方法名等）
			替换为直接引用（如指针、偏移量等） 。
	
	初始化：	类加载的第三个阶段，指的是执行类中的静态初始化代码，包括静态变量赋值和静态代码块执行。		初始化阶段只会在第一次主动使用该类时触发，
		主动使用包括以下六种情况：
			创建类实例、访问类或接口的静态变量、调用类或接口的静态方法、					反射调用类或接口、初始化子类或实现接口、启动 Java 程序时指定主类 。
	
	使用：	类加载后的正常状态，指程序通过该类创建对象或调用方法等操作，实现业务逻辑。
	
	卸载：	类加载的最后一个阶段，指当一个类不再被任何地方引用时，虚拟机就会将其从方法区中清除，
		释放内存空间。卸载阶段由垃圾回收器负责执行，一般不需要程序员干预 。
	