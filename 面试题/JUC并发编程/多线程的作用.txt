多线程是一种编程技术，可以让一个程序中的多个任务同时执行，从而提高程序的效率和性能。


多线程有以下几个主要的用途：

	提高CPU利用率：
		当程序中有一些耗时的操作，如IO操作、网络请求、计算密集型任务等，
		如果只使用单线程，会导致CPU在等待这些操作完成时处于空闲状态，浪费资源。
		如果使用多线程，可以让CPU在等待一个操作时执行另一个操作，从而充分利用CPU的计算能力。


	提高用户体验：
		当程序中有一些后台任务，如数据加载、文件保存、日志记录等，
		如果只使用单线程，会导致用户界面卡顿或者无响应，影响用户的感受。
		如果使用多线程，可以将这些后台任务放在单独的线程中执行，不影响用户界面的交互和响应。

	提高并发性能：
		当程序需要处理大量的并发请求，如服务器端、数据库、网络游戏等，
		如果只使用单线程，会导致请求排队等待处理，降低吞吐量和响应速度。
		如果使用多线程，可以将请求分配给不同的线程处理，从而提高并发性能和扩展性。