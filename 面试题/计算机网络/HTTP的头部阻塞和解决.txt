队头阻塞问题



HTTP1.0规定下一个请求必须在前一个请求响应到达之后才能发送。

	假设前一个请求响应一直不到达（网络原因导致迟到或者丢失、服务器崩盘等原因），
	那么下一个请求就不发送，同样的后面的请求也给阻塞了。

http1.1提出了管线化(pipelining)技术，也就是一次性发送多个request请求。

	然而pipelining在接收response返回时，也必须依顺序接收，
		如果前一个请求遇到了阻塞，后面的请求即使已经处理完毕了，仍然需要等待阻塞的请求处理完毕。
		这种情况队头阻塞，第一个请求阻塞后，后面的请求都需要等待。


http2中提出了多路复用（Multiplexing）技术，
		
		就是将多个请求复用同一个tcp链接中，将一个TCP连接分为若干个流（Stream），
		每个流中可以传输若干消息（Message），每个消息由若干最小的二进制帧（Frame）组成。

		也就是将每个request-response拆分为了细小的二进制帧Frame，这样即使一个请求被阻塞了，
		也不会影响其他请求。

http3干脆就使用了udp协议
	
	HTTP3是HTTP协议的最新版本，基于一个新的传输层协议，叫做QUIC，使用UDP而不是TCP来传输数据。
			目的是为了提高网络性能，解决TCP在无线网络中的一些问题，
					如队头阻塞、握手时延、连接迁移等。

	HTTP3的工作原理可以分为以下几个方面：

		连接建立：使用QUIC协议建立连接，只需要一个往返时间（RTT）就同时完成TCP握手和TLS握手功能，				而且可以支持0-RTT的快速重连。

		数据传输：使用QUIC协议来传输数据，在UDP上实现可靠有序的字节流，每个字节流有一个唯一的ID，
				支持多路复用和优先级调度。
				QUIC协议还实现了拥塞控制、丢包恢复、转发纠错等功能，以提高传输效率和稳定性。

		数据编码：使用QPACK协议来编码数据，它是对HTTP2中的HPACK协议的改进，
				可以解决动态表在无序字节流中的队头阻塞问题。
				QPACK协议使用静态表、动态表和霍夫曼编码来压缩HTTP头部，减少传输开销。

		数据解析：使用相同的语法和语义来解析数据，与HTTP2一致。
				  HTTP3支持请求和响应消息的交换，以及服务器推送等功能。




