请求静态资源
	原始开发方式中有一个DefaultServlet统一处理没有被特别处理的资源请求
		这个defaultServlet有访问静态资源的能力
	
	但是在mvc开发中,	mvc的前端控制器被优先使用,但是前端控制器没有访问静态资源的能力
		
	
解决方式一:
	再次激活defaultServlet
		 <servlet-mapping>
       			<servlet-name>default</servlet-name>
        		<url-pattern>*.html</url-pattern>
  		  </servlet-mapping>
		扩展名"*.html"源比"/"匹配的缺省程度高,在与前端控制器匹配前,要先经过defaultServlet匹配

		缺省程度:
			指在URL匹配时，如有多个servlet-mapping与URL匹配，
			那匹配程度最高的servlet-mapping会被选中。
		
解决方式二:
	在spring的xml中配置静态资源的映射,匹配映射路径指定位匹配资源
	<mvc:resources mapping="/image/*" location="/img/"/>
	mapping:	映射资源虚拟路径
	location:		匹配映射路径的请求到实际资源
	
解决方式三:
	在spring的xml中配置<mvc:default-servlet-handler/> 
		这个方式注册了一个DefaultServletHttpRequestHandler处理器	
		静态资源的访问都要由该处理器处理,开发常用

	
如果要使用方式二和方式三
	spring中要配置一个	处理器映射器RequestMappingHandlerMapping	

因为:	如果不配置它,spring会默认配置一个RequestMappingHandlerMapping
		但是<mvc:default-servlet-handler/>和<mvc:resources mapping="/image/*" location="/img/">被解析后,
		底层注入了一个SimpleUrlHandleMapping,会导致默认handlerMapping不再加载
		而SimpleUrlHandlerMapping是不能解析注解的映射的,最终会导致访问404



