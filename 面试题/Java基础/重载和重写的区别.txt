重载和重写的区别
	重载和重写是Java语言实现多态性的两种方式

	
重载定义:	在一个类中定义多个同名的方法，但是参数列表不同（参数类型、个数或顺序不同）。
	作用:	为了让同一个方法可以适应不同的参数，提高代码的复用性和灵活性。
	规则:	对返回类型没有特殊要求，可以相同也可以不同，但不能只通过返回类型来区分重载方法。
		对访问修饰符没有特殊要求，可以相同也可以不同，但不能降低方法的可见性。
	时机:	发生在编译时，编译器根据参数列表的不同来选择合适的方法调用。


重写定义:
	定义：	在子类中重新定义父类的方法，方法名、参数列表和返回类型都相同。
	目的：	为了让子类可以根据自己的需要修改父类的方法，实现不同的功能和行为。
	规则：	要求返回类型必须相同或者是父类返回类型的子类。
		要求访问修饰符不能比父类方法更严格
		要求抛出比父类方法更多或更宽泛的异常。
	时机:	发生在运行时，运行时系统根据对象的实际类型来选择合适的方法执行。