TCP三次握手

	第一次握手:		Client将标志位SYN置为1,随机产生一个值seq=x,并将该数据包发送给Server,
					Client进入SYN_SENT状态,等待Sever确认

					其实就是客户端给服务端发请求建立连接信息

	第二次握手:		Server收到数据包后由标志位SYN=1指定Client请求建立连接,
					Server将标志位SYN和ACK置为1,ack=x+1,随机产生一个值seq=y
					将该数据包发送给Client确认连接请求,Server进入SYN_RCVD状态
			
					其实就是服务端收到请求,回复确认收到

	第三次握手:		Client收到确认后,检查ack是否为x+1.ACK是否为1,如果正确就将标志位置为1
					ack=y+1.并将数据包发送给Server,Server检查ack是否为y+1,ACK是否为1
					如果正确就连接建立成功, Client和Server都进入ESTABLISHED状态,完成三次握手
					随后Client和Server间开始传输数据



标志位SYN:			同步标志,用于发起请求
SYN_SENT状态:		客户端已经发送SYN标志位的数据包给服务端,等待客户端回复SYN和ACK的状态
标志位ACK:			确认标志,用于确认连接请求
SYN_RCVD状态:		服务端口收到SYN包并发送SYN，ACK包后所处的状态

seq:					序列号，为了连接以后传送数据用的，
ack:					对收到的数据包的确认，值是等待接收的数据包的序列号。



	第一次消息发送中，A随机选取一个序列号x作为自己的初始序号发送给B；
	第二次消息B使用ack对A的数据包进行确认，因为已经收到了序列号为x的数据包，
			准备接收序列号为x+1的包，所以ack=x+1，同时B告诉A自己的初始序列号，就是seq=y；
	第三次消息A告诉B收到了B的确认消息并准备建立连接，A此条消息的序列号是x+1，所以seq=x+1，
			而ack=y+1表示A正准备接收B序列号为y+1的数据包。

			seq是数据包本身的序列号；ack是期望对方继续发送的那个数据包的序列号。



















