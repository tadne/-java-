Mybatis支持延迟加载的功能，也称为懒加载或按需加载。

延迟加载:	在查询一个对象时，不会立即查询其关联的对象，而是在真正用到关联对象时，
		才再次发送SQL语句去查询关联对象，从而提高查询效率和性能。

Mybatis实现延迟加载的原理是什么？
	Mybatis实现延迟加载的原理:基于代理模式和拦截器的机制，即：

	代理模式：	Mybatis为每个需要延迟加载的对象创建一个代理对象，
			代理对象会拦截对目标对象的所有方法调用，并判断是否需要触发延迟加载。

	拦截器：		Mybatis用一个拦截器来拦截代理对象的方法调用，并执行相应的逻辑。
			该拦截器会根据配置文件或注解的设置判断是否需要进行延迟加载，
			如需要，会根据关联对象的查询方法发送SQL语句，将查询结果封装为目标对象，
				并赋值给代理对象；
			如果不需要，就直接返回代理对象。