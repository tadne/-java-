IO多路复用:
		IO多路复用是一种同步IO模型
		指内核一旦发现进程指定的一个或多个IO条件准备读取,就通知该进程
		
	也就是:实现一个线程可以监视多个文件描述符fd；
			一旦文件描述符fd就绪，就能通知应用程序进行相应的读写操作；
			没有fd就绪会阻塞应用程序，交出cpu
		
		Linux下包括了三种IO多路复用：select、poll、epoll。
		这三种机制都可关注多个文件描述符，但对于这三种机制，不同数量级文件描述符对性能的影响不同
		
	这种机制可避免用多线程或多进程方式处理多个I/O请求，减少系统开销。

适用场合:
	
	当客户处理多个描述字时（一般是交互式输入和网络套接口），必须使用I/O复用。
	当一个客户同时处理多个套接口时，这种情况是可能的，但很少出现。
	如果一个TCP服务器既要处理监听套接口，又要处理已连接套接口，一般也要用到I/O复用。
	如果一个服务器即要处理TCP，又要处理UDP，一般要使用I/O复用。
	如果一个服务器要处理多个服务或多个协议，一般要使用I/O复用。
	
	多进程和多线程技术相比
			I/O多路复用技术的最大优势是系统开销小，系统不必创建进程/线程，也不必维护进程/线程，
			从而大大减小了系统的开销。








文件描述符fd:
		内核为高效管理已经被打开的文件所创建的索引，是一个非负整数，用于指代被打开的文件，
		所有执行I/O操作的系统调用都通过文件描述符来实现.

		 在Linux系统中，0、1、2这三个文件描述符被赋予特殊含义，分别是标准输入、标准输出、标准错误.
		文件描述符不是唯一指代一个文件，多个文件描述符可以指向同一个打开文件，
		这些文件描述符可以在相同或不同的进程中打开