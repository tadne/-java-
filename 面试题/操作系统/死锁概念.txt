什么是死锁?

		在两个或多个并发进程中,如每个进程持有某种资源而又等待其他进程释放资源.
		在未改变这种状态前都不能向前推进,称这组进程产生 了死锁


死锁产生的四个必要条件(有一个条件不成立就不会有死锁)

		互斥条件:			一个资源一次只能被一个进程访问
		请求和保持条件:	一个进程因请求资源而阻塞时,对已经获得资源保持不放
		不剥夺条件:		进程获得的资源在未完全使用完之前,不能强行剥夺
		循环等待条件:		若干进程间形成一种头尾相接的环形等的资源关系


如何处理死锁问题:

	忽略该问题:
			如:	鸵鸟算法    可以用在极少发生死锁的情况下
	监测死锁并恢复
	仔细对资源进行动态分配,避免死锁
	通过破除死锁的四个必要条件之一来防止死锁发生			
		打破互斥条件:	
				将独占性资源改造为虚拟资源,或使用可共享的资源代替独占式资源,
				其实就是放弃使用锁
		
		打破请求与保持条件:	
				在进程运行前申请所有资源,满足才运行,不然就等待

		打破不可剥夺条件:
				当一个进程占有了一些资源后,由申请其他资源而无法满足时,释放原来占用的资源

		打破循环等待条件:
				按照一定顺序申请资源,或使用资源分级方法				
				