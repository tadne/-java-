Spring框架
	一个开源的Java平台，提供了一种全面的编程和配置模型，用于现代基于Java的企业应用程序。
	Spring框架的主要优点之一是它的分层架构，允许你选择使用哪些组件，
			同时为J2EE应用程序开发提供了集成的解决方案。


Spring框架的核心:	控制反转（IoC）和面向切面编程（AOP）。

	控制反转是一种设计原则，通过把对象的创建、配置和管理交给Spring的IoC容器实现，
		降低程序组件之间的耦合度，提高程序的可扩展性和可维护性。
		面向切面编程:
			一种编程范式，把横切关注点（如日志、事务、安全等）封装成独立模块(切面)，
			在运行时动态地将这些切面插入到目标对象（被代理对象）的执行流程中，
			实现对目标对象功能的增强或修改，而不影响其核心逻辑。

	Spring框架由7个定义良好的模块组成，分别是：
		核心容器、测试、数据访问、Web MVC、WebFlux、集成和语言。
		每个模块都可以单独存在，或与其他一个或多个模块联合使用。

简单介绍一下这些模块的功能：

	核心容器：
		提供Spring框架的基本功能，
		包括依赖注入、事件、资源、国际化、校验、数据绑定、类型转换和表达式语言等。
		核心容器的主要组件是BeanFactory，它是工厂模式的实现，用来创建、配置和管理bean。

	测试：
		测试模块提供了对Spring框架进行单元测试和集成测试的支持，
		包括模拟对象、TestContext框架、Spring MVC测试和WebTestClient等。

	数据访问：
		数据访问模块提供了对不同数据访问技术的支持，
		包括事务、DAO支持、JDBC、ORM、XML绑定等。

	Web MVC：
		Web MVC模块提供了一个基于Servlet API的Web框架，
		用来开发基于MVC模式的Web应用程序。
		Web MVC模块支持多种视图技术，如JSP、Velocity、Tiles、iText和POI等。

	WebFlux：
		WebFlux模块提供了一个基于Reactor项目和Reactive Streams规范的响应式Web框架，
		用来开发异步和非阻塞的Web应用程序。
		WebFlux模块支持多种编程模型，如函数式编程和注解驱动编程等。

	集成：
		集成模块提供了对不同集成技术的支持，
		包括远程调用、JMS、JCA、JMX、邮件、任务调度、缓存和可观测性等。

	语言：	语言模块提供了对不同语言的支持，包括Kotlin、Groovy和动态语言等。

