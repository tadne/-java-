redo Log:	重做日志,记录的是事务提交时,数据页的物理修改,用来实现事务的持久性
		分为两部分:	重做日志缓冲和重做日志文件,前者是在内存中,后者在磁盘中.
			当事务提交后会将所有修改信息存到该日志中,用于刷新脏页到磁盘
			在出现错误时,进行数据恢复
	
	作用:	实现事务持久性
		

	redoLog前流程:	客户端进行事务操作发请求到mysql服务器
			先搜索Buffer Pool缓冲池,若没有对应数据,后台线程就将数据从磁盘读取到缓冲池
			将crud操作应用到缓冲区,那片区域叫做脏页
			然后后台线程会按照时机将脏页中数据刷新到磁盘中
			
		问题:如果脏页刷新失败,会对数据库一致性造成影响


	redoLog后流程:	客户端进行事务操作发请求到mysql服务器
			先搜索Buffer Pool缓冲池,若没有对应数据,后台线程就将数据从磁盘读取到缓冲池
			将增删改操作应用到缓冲区,那片区域叫做脏页
			将脏页数据记录在redoLog Buffer中
			当事务提交时,就将redoLog Buffer刷新到磁盘中
			如果之后脏页刷新成功,就可以通过redoLog 进行回滚


undo Log:	回滚日志,用于记录数据被修改前的信息
		undoLog是逻辑日志,当删除一条记录时,undoLog会记录对应的insert记录,反之亦然.
		让执行回滚的时候,就可以从undoLog中的逻辑记录读取到相应的内容并回滚

	undoLog销毁:	事务执行时产生,事务提交时,不会马上删除undoLog,因为这些日志可以还用于MVC
	undoLog储存:	采用段的方式管理和记录,存在rollbacksegment回滚段中,内部包含1024个回滚段

	作用:	提供回滚和MVCC(多版本并发控制)