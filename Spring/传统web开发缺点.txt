传统web开发缺点

1:	在使用MVC的结构体系完成后台代码声明时,虽然降低了代码的冗余,但层与层间的耦合性过高,
		造成了代码升级维护特别麻烦

	比如,某天业务层某个类文件需要替换为新的类文件,
		那控制层所有调用该业务类的代码要全修改为调用新的业务类.

	SpringIOC:	控制反转 		作用:	实现了代码层与层之间的解耦.

2:	通用事务功能,通用日志功能都耦合在业务代码中

	第三方根据要求为程序提供需要的Bean对象的代理对象
	SpringAop:面向切面编程	实现事务和日志,实现解耦



	