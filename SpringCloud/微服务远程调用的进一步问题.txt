在微服务远程调用的过程中，还存在几个问题需要解决。


	业务健壮性问题：	
			例	如果商品服务查询时故障，导致购物车列表再调用商品服务时也会异常？
				导致购物车查询失败。但从业务角度，为提升用户体验，即便商品查询失败，
				购物车列表也应该正确展示出来，哪怕是不包含最新的商品信息。

	级联失败问题：
			例：假如商品服务业务并发高，占用过多Tomcat连接。可能导致商品服务的所有接口响应时间增加，				延迟变高，甚至长时间阻塞直至查询失败。
				此时购物车业务要查询并等待商品查询结果，导致查询购物车列表业务的响应时间也变长，
				甚至也阻塞直至无法访问。此时如果查询购物车的请求较多，可能导致购物车服务的
				Tomcat连接占用较多，所有接口的响应时间都会增加，整个服务性能很差， 甚至不可用。


	跨服务的事务问题：
			例：	- 商品服务：扣减库存
				- 订单服务：保存订单
				- 购物车服务：清理购物车
			这些业务都是数据库的写操作，必须确保所有操作的同时成功或失败。这些操作在不同微服务，
			也就是不同的Tomcat，这样的情况如何确保事务特性？