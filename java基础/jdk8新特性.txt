Java 8 新特性主要有以下几个方面：

	Lambda 表达式：
			允许把函数作为一个方法的参数（函数作为参数传递到方法中），使得代码更简洁、更灵活。

	方法引用：
			方法引用提供了一种语法，可以直接引用已有的 Java 类或对象的方法或构造器。
			与 Lambda 表达式结合使用，可以减少冗余代码，提高可读性。

	函数式接口：
			指只有一个抽象方法但可以有多个非抽象方法的接口，这样的接口可以隐式转换为 Lambda 表达式.

	默认方法：
			默认方法就是在接口中定义了一个实现的方法，可以避免修改已有的接口时与实现类的兼容性问题。

	Stream API：
			新添加的 Stream API 将真正的函数式编程风格引入到 Java ，对集合进行高效、并行、流式的操作,			支持惰性求值、短路、终端操作等特性。

	Optional 类：
			Optional 类是一个容器类，用来防止空指针异常，可以表示一个值存在或者不存在，
			提供了一些有用的方法来处理可能为空的对象。

	新的日期时间 API：
			Java 8 引入 java.time 包，提供了全新的日期时间类替代旧的 java.util.Date 和java.util.Calendar,
			新的 API 支持不同的时间单位、时区、本地化等功能，更加易用和准确。

	Nashorn, JavaScript 引擎：
			Java 8 提供了一个新的 Nashorn JavaScript 引擎，允许在 JVM 上运行特定的 JavaScript 应用，
			可以与 Java 代码进行互操作，提高了性能和兼容性。

	除了以上主要特性，Java 8 还有其他的改进和优化，如注解增强、并发工具类更新、Base64 编码解码支持等


