解压缩流
	解压本质:	把每一个ZipEntry按照层级拷贝到本地另一个文件夹中

	File src=new File("src.txt");//要解压缩的文件
        File dest=new File("dest");//目的地
	//创建压缩流对象
        ZipInputStream zipInputStream=new ZipInputStream(new FileInputStream(src));
 	FileOutputStream fileOutputStream=new FileOutputStream(dest);
        ZipEntry nextEntry ;
        while ((nextEntry=zipInputStream.getNextEntry())!=null){//获取压缩文件夹中的文件和文件夹
            if (nextEntry.isDirectory()){//如果是文件夹就创建文件夹
                File file=new File(dest,nextEntry.toString());
                file.mkdirs();
            }else {//文件就拷贝
                int b;
                byte[] bytes=new byte[1024];
                while ((b=zipInputStream.read(bytes))!=-1){
                    fileOutputStream.write(bytes);
                } 
            }
        }
	zipInputStream.close();
	FileOutputStream.close();


压缩流
	//压缩单个文件
	File src=new File("src.txt");//要被压缩的文件夹
        File dest=new File("dest");//目的地
        //创建压缩流对象
	ZipOutputStream zos=new ZipOutputStream(new FileOutputStream(new File(dest,"src.zip")));
        //创建压缩包中zipEntry对象
        ZipEntry zipEntry=new ZipEntry(src.getName());
        //获取要被压缩的文件
        zos.putNextEntry(zipEntry);
        FileInputStream fileInputStream=new FileInputStream(src);
        //将压缩文件写入压缩包中zipEntry中
        int b;
        byte[] bytes=new byte[1024];
        while((b=fileInputStream.read(bytes))!=-1){
            zos.write(bytes);
        }

     psvm{
	//压缩多个文件
	File src=new File("directory");//要被压缩的文件夹
        File destParent=src.getParentFile();//目的地的父路径
        File dest=new File(destParent,src.getName()+".zip");//目标压缩包
    	ZipOutputStream zos=new ZipOutputStream(new FileOutputStream(dest));//压缩流
        toZip(src,zos, src.getName());//压缩方法
    }
    public static void toZip(File src,ZipOutputStream zos,String name) throws IOException {
        File[] files=src.listFiles();//获取目标文件夹的所有文件对象
        for (File file : files) {
            if (file.isDirectory()){//如果是文件夹,递归
                toZip(file,zos,name+"\\"+file.getName());
            }else {//如果是文件
      		ZipEntry zipEntry=new ZipEntry(name+"\\"+file.getName());//创建压缩包对应的zipEntry对象
                zos.putNextEntry(zipEntry);//创建对应zipEntry
		//写数据到zipEntry中
                byte[]bytes=new byte[1024];
                int b;
                FileInputStream fis=new FileInputStream(file);
                while ((b=fis.read(bytes))!=-1){
                    zos.write(bytes);
                }
		/释放资源
                fis.close();
                zos.closeEntry();
            }
        }
    }





