传统web开发

问题1:	在使用MVC的结构体系来完成后台功能代码的声明时,
	在一定程度上降低了代码的冗余,但是层与层之间的耦合性过高,造成代码升级维护特别麻烦

	比如,某天业务层某个类文件需要替换为新的类文件,
	那么,控制层所有调用该业务类的代码需要全部修改为调用新的业务类.

	SpringIOC.作用:实现了代码层与层之间的解耦.

问题2:	通过事务功能耦合在业务代码中,通用的日志功能耦合在业务代码中

	第三方根据要求为程序提供需要的Bean对象的代理对象
	用第三方aop来实现事务和日志,实现解耦



	