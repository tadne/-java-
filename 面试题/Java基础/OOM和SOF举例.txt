OOM和SOF举例

	OOM是OutOfMemoryError的简称,表示程序在运行过程中请求的内存超过了虚拟机能够提供的最大内存。
	SOF是StackOverflowError的简称，它表示程序在运行过程中栈帧超出了栈内存的大小。



OOM的原因有以下几种：
	
	堆内存溢出：
		堆内存是用来存储对象实例的内存区域，
		创建的对象过多或过大，又没有及时回收，会导致堆内存不足，抛出OOM异常 。

	栈内存溢出：
		栈内存是用来存储局部变量和方法调用信息的内存区域，
		方法调用的层次过深或者局部变量过多，会导致栈内存不足，抛出OOM异常.

	方法区溢出：
		方法区是用来存储类信息、常量、静态变量等数据的内存区域，
		加载的类过多或者常量池过大，就会导致方法区不足，抛出OOM异常  



SOF的原因有以下几种：
	递归调用过深：
		递归调用是指一个方法直接或间接地调用自身，每次调用会创建一个新的栈帧，并压入栈中。
		
		递归调用没有终止条件或终止条件不合理，导致栈帧不断增加，超出栈内存大小，抛出SOF异常 

	循环调用过深：
		循环调用是指多个方法相互调用，形成一个闭环，每次调用会创建一个新的栈帧，并压入栈中。
		
		循环调用没有终止条件或终止条件不合理，导致栈帧不断增加，超出栈内存大小，抛出SOF异常