存储引擎:	
		储存数据,建立索引,更新和查询数据等技术的实现方式
		基于表,不基于库,常被称为表类型


简介:		在创建表的时候指定存储引擎	create table 表名(...)engine=innodb [commit ..];
		可以不指定,默认是innodb引擎


innodb引擎:	一种兼顾高可靠性和高性能的通用引擎,在mysql5.5后默认
	
	特点:	DML操作(数据增删改)遵循ACID模型(原子,一致,隔离,持久),支持事务
		行锁,提高并发访问性能
		支持外键 foreign key约束,保证数据完整性
			//事务外键行锁
		
	文件:	xxx.ibd文件,xxx是表名,innodb引擎每一张表都对应一个表空间文件,
			存储该表的表结构(frm),数据,索引
		参数:	innodb_file_per_table

	逻辑存储结构:
		表空间 tablespace  ==> 段 segment ==> extent 区 ==> page 页 ==> row 行

		一个extent区是1M,一个page页是16k,



MyISAM引擎:	mysql早期的默认引擎
	
	特点:	不支持事务,外键
		支持表锁,不支持行锁	
		访问速度快
		没有事务外键和行锁.但是速度比较快.

Memory引擎:	memory引擎的表数据是存在内存中的,由于硬件,断电等问题的影响
		只能将这些表作为临时表或缓存用
	
	特点:	内存存放 	hash索引

	文件:	xxx.sdi:  	存储表结构信息




三种存储引擎特点比较:
			InnoDb		MyISAM	       Memory
	存储限制:	64TB		有		有
	事务安全:	支持		----		-----
	锁机制:		行锁		表锁		表锁
	B+树索引:	支持		支持		支持
	Hash索引:	----		----		支持
	全文索引:	支持(5.6)	支持		-----
	空间使用:	高		低		中等
	内存使用:	高		低		中等
	批量插入速度:	低		高		高
	支持外键:	支持		-----		-----




选择引擎:
	根据特点选择合适引擎
	InnoDb:		要求事务,并发一致性,数据除了插入查询外有很多更新和删除就用innodb
	MyISAM:		查询和插入为主,更新和删除很少.对事务,并发要求不高就用MyISAM
	Memory:		将数据保存在内存中,访问速度快,用于临时表已经缓存.缺点是对表大小有限制













