业务幂等性

	幂等在开发中,就是指同一个业务,执行一次或多次对业务的影响是一致的


方案一
	给消息加一个唯一id,用id区分是否重复消息:

		给消息生成唯一id,与消息一起投递消费者
		消费者收到消息后处理业务,业务成功后将id保存
		下次收到消息,判断是否存在该id,存在就是重复消息,放弃处理

方案二
	结合业务逻辑,基于业务本身判断,
		例:	支付后修改订单状态为已支付,在修改前查询订单状态,如果是已支付,那就不处理



如何保证支付和交易服务间的订单状态一致性?

	首先,支付服务会在用户支付成功后用mq通知交易服务,完成状态同步
	然后,为mq消息可靠性,采用生产者确认机制,消费者确认机制,消费者失败重试机制等策略,
			确保消息发送和处理的可靠性.
			同时开启MQ持久化,避免因服务宕机导致消息丢失
	最后,在订单修改状态时做幂等性判断,避免消息重复消费导致订单状态异常


如果消息处理失败,兜底方案?

	在交易服务设置定时任务,定期查询订单支付状态,这样即使MQ通知失败,还可以用定时任务兜底,确保订单一致性

	还做了消费者回复机制,在消息失败后,就将消息发送到error.queue中,对程序员做进一步通知,进行人工处理
	