死锁:
	多个线程或进程在执行过程中，因争夺资源而造成的一种互相等待的现象，
	如果没有外力干涉，它们都将无法继续执行。

	产生死锁的四个必要条件是：

互斥条件：	即资源全部被占用
	指每个资源要么已经分配给了一个进程，要么就是可用的，不能同时被多个进程共享。

请求和保持条件：	即资源得不到释放
	指已经得到了某些资源的进程可以再请求新的资源，而不必释放已经得到的资源。

不剥夺条件：	即资源不能被共享
	指进程已经获得的资源，在未使用完之前，不能被其他进程强行剥夺，只能由获得该资源的进程自己释放。

环路等待条件：	即资源成环
	指在发生死锁时，必然存在一个进程——资源的环形链，即每个进程都在等待下一个进程所占有的资源。

只要系统发生了死锁，上述死锁是指多个线程或进程在执行过程中，因争夺资源而造成的一种互相等待的现象，如果没有外力干涉，它们都将无法继续执行。

具体的方法有以下几种：

预防：		通过限制资源的分配方式，使系统不可能进入死锁状态。
	如，一次性分配所有资源、限制请求数量、允许剥夺资源、按序申请资源等。

避免：		通过动态地分析资源的分配情况，避免系统进入不安全状态。
	如，使用银行家算法来判断是否有足够的资源分配给请求者，如果有则分配，如果没有则等待。

检测：		通过定期地检查系统的资源分配图，发现是否存在死锁。
	如，使用回路检测算法来寻找是否存在环路等待的情况，如果有则说明发生了死锁。

解除：		通过强制地释放一些资源或终止一些进程，打破死锁状态。
	如，撤销部分或全部已分配给死锁进程的资源、终止部分或全部死锁进程并回收其资源等。